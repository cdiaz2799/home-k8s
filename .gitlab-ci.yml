image: pulumi/pulumi-python:3.88.1

include:
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PULUMI_STACK: "prod"
cache:
  paths:
    - .cache/pip
    - $HOME/.pulumi/bin
    - venv/
before_script:
  - python -V
  - pip install virtualenv -q
  - virtualenv venv
  - source venv/bin/activate
  - pip install --upgrade pip -q
  - pip install -r requirements.txt -q
  - export PATH=$PATH:$HOME/.pulumi/bin
  - pulumi login
  - pulumi stack select $PULUMI_STACK

stages:
  - linting
  - test
  - preview
  - build

isort:
  stage: linting
  script:
    - isort . --check-only
  only:
    - merge_requests

black:
  stage: linting
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --check --verbose -- .

pylint:
  stage: linting
  script:
    - pylint --exit-zero --load-plugins=pylint_gitlab --output-format=gitlab-codeclimate:codeclimate.json **/*.py
  artifacts:
    reports:
      codequality: codeclimate.json
    when: always

secret_detection:
  before_script: [ ]

gemnasium-dependency_scanning:
  before_script: [ ]

preview:
  stage: preview
  script:
    - pulumi preview --diff --non-interactive
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

build:
  stage: build
  script:
    - pulumi up --yes --non-interactive
  artifacts:
    paths:
      - pulumi-log.txt
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $TF_AUTO_DEPLOY == "true"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual